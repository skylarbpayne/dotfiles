# 256 colors for vim
set -ga terminal-overrides ',xterm-256color:Tc'

# Set escape time explicitly
set-option -sg escape-time 10

# Start window numbering at 1
set-option -g base-index 1
set-window-option -g pane-base-index 1

# Set '[' as prefix (and allow double to write in terminal):
unbind C-b
set -g prefix C-n
bind n send-prefix

# Reload config with a key
bind R source-file ~/.tmux.conf \; display "Config reloaded!"

# Mouse works as expected
set-option -g mouse on

# Scrolling works as expected                                                       
set -g terminal-overrides 'xterm*:smcup@:rmcup@'                                    
                                                                                   
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Use better mnemonics for horizontal/vertical splits (tmux splits are opposite of vim). 
bind-key h split-window -v 
bind-key v split-window -h

# C-l is taken over by vim style pane navigation
bind C-l send-keys 'C-l'

# Use vim keybindings in copy mode
setw -g mode-keys vi
